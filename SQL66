-- 找出和最貴的產品同類別的所有產品
SELECT TOP 12
	ProductName, UnitPrice, CategoryID
FROM Products
ORDER BY SUM(UnitPrice) OVER(
		PARTITION BY CategoryID
	) DESC

-- 找出和最貴的產品同類別最便宜的產品
SELECT TOP 1
	ProductName, UnitPrice, CategoryID
FROM Products
ORDER BY SUM(UnitPrice) OVER(
		PARTITION BY CategoryID
	) DESC, UnitPrice


-- 計算出上面類別最貴和最便宜的兩個產品的價差
SELECT TOP 1
	MAX(UnitPrice) OVER ( PARTITION BY CategoryID ) -
	MIN(UnitPrice) OVER ( PARTITION BY CategoryID ) AS Spread2
FROM Products
ORDER BY SUM(UnitPrice) OVER(
		PARTITION BY CategoryID
	) DESC

-- 找出沒有訂過任何商品的客戶所在的城市的所有客戶
WITH t0 AS (
	SELECT
		c.City
	FROM Customers c
	LEFT OUTER JOIN Orders o ON c.CustomerID = o.CustomerID
	WHERE o.OrderID IS NULL
)
SELECT
	c.CustomerID, c.City
FROM Customers c
WHERE c.City IN(
	SELECT 
		City 
	FROM t0
)


-- 找出第 5 貴跟第 8 便宜的產品的產品類別
WITH t1 AS (
	SELECT
		ROW_NUMBER() OVER (
			ORDER BY UnitPrice DESC 
		) AS NumA5,
		ROW_NUMBER() OVER (
			ORDER BY UnitPrice
		) AS NumZ8, c.CategoryName
	FROM Products p
	INNER JOIN Categories c ON p.CategoryID = c.CategoryID
)
SELECT
	c.CategoryName
FROM t1
INNER JOIN Categories c ON t1.CategoryName = c.CategoryName
WHERE NumA5 = 5 OR NumZ8 = 8

-- 找出誰買過第 5 貴跟第 8 便宜的產品
WITH t1 AS (
	SELECT
		ROW_NUMBER() OVER (
			ORDER BY UnitPrice DESC 
		) AS NumA5,
		ROW_NUMBER() OVER (
			ORDER BY UnitPrice
		) AS NumZ8, c.CategoryName, p.ProductID
	FROM Products p
	INNER JOIN Categories c ON p.CategoryID = c.CategoryID
)
SELECT
	c.CustomerID
FROM t1
INNER JOIN [Order Details] od ON t1.ProductID = od.ProductID
INNER JOIN Orders o ON od.OrderID = o.OrderID
INNER JOIN Customers c ON o.CustomerID = c.CustomerID
WHERE t1.NumA5 = 5 OR t1.NumZ8 = 8


-- 找出誰賣過第 5 貴跟第 8 便宜的產品
WITH t1 AS (
	SELECT
		ROW_NUMBER() OVER (
			ORDER BY UnitPrice DESC 
		) AS NumA5,
		ROW_NUMBER() OVER (
			ORDER BY UnitPrice
		) AS NumZ8, c.CategoryName, p.ProductID
	FROM Products p
	INNER JOIN Categories c ON p.CategoryID = c.CategoryID
)
SELECT
	s.CompanyName
FROM t1
INNER JOIN Products p ON t1.ProductID = p.ProductID
INNER JOIN Suppliers s ON p.SupplierID = s.SupplierID
WHERE t1.NumA5 = 5 OR t1.NumZ8 = 8

-- 找出 13 號星期五的訂單 (惡魔的訂單)
SELECT
	*
FROM Orders
WHERE DATEPART(DAY, OrderDate) = 13
AND DATEPART(WEEKDAY, OrderDate) = 6

-- 找出誰訂了惡魔的訂單
SELECT
	CustomerID, OrderDate
FROM Orders
WHERE DATEPART(DAY, OrderDate) = 13
AND DATEPART(WEEKDAY, OrderDate) = 6

-- 找出惡魔的訂單裡有什麼產品
SELECT
	p.ProductID, p.ProductName, o.OrderID, o.OrderDate
FROM Products p
INNER JOIN [Order Details] od ON p.ProductID = od.ProductID
INNER JOIN Orders o ON od.OrderID = o.OrderID
WHERE DATEPART(DAY, o.OrderDate) = 13
AND DATEPART(WEEKDAY, o.OrderDate) = 6

-- 列出從來沒有打折 (Discount) 出售的產品
SELECT
	p.ProductID, p.ProductName
FROM Products p
INNER JOIN [Order Details] od ON p.ProductID = od.ProductID
WHERE od.Discount = 0

-- 列出購買非本國的產品的客戶
SELECT
	c.CustomerID, c.Country
FROM Customers c
INNER JOIN Orders o ON c.CustomerID = o.CustomerID
INNER JOIN [Order Details] od ON o.OrderID = od.OrderID
INNER JOIN Products p ON od.ProductID = p.ProductID
INNER JOIN Suppliers s ON p.SupplierID = s.SupplierID
WHERE c.Country <> N'Taiwan'


-- 列出在同個城市中有公司員工可以服務的客戶
SELECT DISTINCT
	c.City, c.CustomerID
FROM Customers c
FULL OUTER JOIN Orders o ON c.CustomerID = o.CustomerID
LEFT OUTER JOIN Employees e ON e.EmployeeID = o.EmployeeID
WHERE e.EmployeeID IS NOT NULL
ORDER BY c.City

-- 列出那些產品沒有人買過
SELECT
	p.ProductID, p.ProductName ,c.CustomerID
FROM Products p
FULL OUTER JOIN [Order Details] od ON p.ProductID = od.ProductID
FULL OUTER JOIN Orders o ON od.OrderID = o.OrderID
FULL OUTER JOIN Customers c ON o.CustomerID = c.CustomerID
WHERE c.CustomerID IS NULL

----------------------------------------------------------------------------------------
-- 列出所有在每個月月底的訂單
SELECT
	*
FROM Orders
WHERE OrderDate = EOMONTH(OrderDate)


-- 列出每個月月底售出的產品
SELECT
	o.OrderDate, p.ProductID, p.ProductName
FROM Products p
INNER JOIN [Order Details] od ON p.ProductID = od.ProductID
INNER JOIN Orders o ON od.OrderID = o.OrderID
WHERE o.OrderDate = EOMONTH(o.OrderDate)

-- 找出有敗過最貴的三個產品中的任何一個的前三個大客戶
WITH t1 AS
(
    SELECT
        c.*,
        od.*,
        od.UnitPrice * od.Quantity * (1 - od.Discount) AS Total
    FROM Customers c
    INNER JOIN Orders o ON o.CustomerID = c.CustomerID
    INNER JOIN [Order Details] od ON od.OrderID = o.OrderID
)
SELECT TOP 3
    CustomerID
FROM t1
WHERE CustomerID IN (
    SELECT DISTINCT
        CustomerID
    FROM t1
    WHERE ProductID IN (
        SELECT TOP 3
            ProductID
        FROM t1
        GROUP BY ProductID
        ORDER BY SUM(Total) DESC
    )
)
GROUP BY CustomerID
ORDER BY SUM(Total) DESC


-- 找出有敗過銷售金額前三高個產品的前三個大客戶

-- 找出有敗過銷售金額前三高個產品所屬類別的前三個大客戶

-- 列出消費總金額高於所有客戶平均消費總金額的客戶的名字，以及客戶的消費總金額
WITH ta
AS
(
	SELECT
		c.CustomerID,
		SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS Total
	FROM Customers c
	INNER JOIN Orders o ON c.CustomerID = o.CustomerID
	INNER JOIN [Order Details] od ON o.OrderID = od.OrderID
	GROUP BY c.CustomerID
)
SELECT
	CustomerID, Total
FROM ta
WHERE Total > ( 
	SELECT
		AVG(Total)
	FROM ta
)

-- 列出最熱銷的產品，以及被購買的總金額
WITH tb
AS
(
	SELECT 
		p.ProductName,
		SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS Total
	FROM Products p
	INNER JOIN [Order Details] od ON p.ProductID = od.ProductID
	GROUP BY p.ProductName
)

SELECT  TOP 1
	ProductName, Total
FROM tb
ORDER BY Total DESC


-- 列出最少人買的產品
WITH tc
AS
(
	SELECT
		p.ProductName, COUNT(p.ProductName) AS CountProduct
	FROM Products p
	INNER JOIN [Order Details] od ON p.ProductID = od.ProductID
	GROUP BY p.ProductName
)

SELECT TOP 1
	ProductName
FROM tc
ORDER BY CountProduct
	

-- 列出最沒人要買的產品類別 (Categories)
WITH td
AS
(
	SELECT
		c.CategoryName, COUNT(c.CategoryName) AS CountCategoryName
	FROM Categories c
	INNER JOIN Products p ON c.CategoryID = p.CategoryID
	INNER JOIN [Order Details] od ON p.ProductID = od.ProductID
	GROUP BY c.CategoryName
)

SELECT TOP 1
	CategoryName
FROM td
ORDER BY CountCategoryName

-- 列出跟銷售最好的供應商買最多金額的客戶與購買金額 (含購買其它供應商的產品)
WITH te
AS
(
	SELECT TOP 1
		s.CompanyName,
		SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS SupplierTotal
	FROM Suppliers s
	INNER JOIN Products p ON s.SupplierID = p.SupplierID
	INNER JOIN [Order Details] od ON p.ProductID = od.ProductID
	GROUP BY s.CompanyName
	ORDER BY SupplierTotal DESC
)
SELECT TOP 1
	c.CustomerID,
	SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS Total
FROM Customers c 
INNER JOIN Orders o ON o.CustomerID = c.CustomerID
INNER JOIN [Order Details] od ON o.OrderID = od.OrderID
INNER JOIN Products p ON od.ProductID = p.ProductID
INNER JOIN Suppliers s ON p.SupplierID = s.SupplierID
--INNER JOIN te ON s.CompanyName = te.CompanyName 
GROUP BY c.CustomerID
ORDER BY Total DESC

-- 列出跟銷售最好的供應商買最多金額的客戶與購買金額 (不含購買其它供應商的產品)
WITH tf
AS
(
	SELECT TOP 1
		s.CompanyName,
		SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS SupplierTotal
	FROM Suppliers s
	INNER JOIN Products p ON s.SupplierID = p.SupplierID
	INNER JOIN [Order Details] od ON p.ProductID = od.ProductID
	GROUP BY s.CompanyName
	ORDER BY SupplierTotal DESC
)
SELECT TOP 1
	c.CustomerID,
	SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS Total
FROM Customers c 
INNER JOIN Orders o ON o.CustomerID = c.CustomerID
INNER JOIN [Order Details] od ON o.OrderID = od.OrderID
INNER JOIN Products p ON od.ProductID = p.ProductID
INNER JOIN Suppliers s ON p.SupplierID = s.SupplierID
WHERE s.CompanyName IN (
	SELECT	
		CompanyName
	FROM tf
)
GROUP BY c.CustomerID
ORDER BY Total DESC

-- 列出那些產品沒有人買過
WITH tg
AS
(
	SELECT
		p.ProductName, 
		SUM(od.UnitPrice) AS Total
	FROM Products p
	LEFT OUTER JOIN [Order Details] od ON od.ProductID = p.ProductID
	GROUP BY p.ProductName
)

SELECT
	*
FROM tg
WHERE Total = 0


-- 列出沒有傳真 (Fax) 的客戶和它的消費總金額
SELECT
	c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS Total
FROM Customers c
INNER JOIN Orders o ON c.CustomerID = o.CustomerID
INNER JOIN [Order Details] od ON o.OrderID = od.OrderID
WHERE Fax IS NULL
GROUP BY c.CustomerID

-- 列出每一個城市消費的產品種類數量
SELECT
	c.City,  COUNT(DISTINCT cg.CategoryID) AS CountCity --DISTINCT也可以這樣用
FROM Customers c
INNER JOIN Orders o ON c.CustomerID = o.CustomerID
INNER JOIN [Order Details] od ON o.OrderID = od.OrderID
INNER JOIN Products p ON od.ProductID = p.ProductID
INNER JOIN Categories cg ON p.CategoryID = cg.CategoryID
GROUP BY c.City


-- 列出目前沒有庫存的產品在過去總共被訂購的數量
SELECT
	p.ProductName, SUM(od.Quantity) AS TotalQuantity
FROM Products p
INNER JOIN [Order Details] od ON p.ProductID = od.ProductID
WHERE p.UnitsInStock = 0
GROUP BY p.ProductName


-- 列出目前沒有庫存的產品在過去曾經被那些客戶訂購過
WITH th
AS
(
	SELECT
	ProductName
	FROM Products
	WHERE UnitsInStock = 0
)
SELECT
	c.CustomerID
FROM Customers c
INNER JOIN Orders o ON c.CustomerID = o.CustomerID
INNER JOIN [Order Details] od ON o.OrderID = od.OrderID
INNER JOIN Products p ON od.ProductID = p.ProductID
WHERE p.ProductName IN (
	SELECT
		ProductName
	FROM th
)
GROUP BY c.CustomerID

-- 列出每位員工的下屬的業績總金額
SELECT
	ee.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS Achievement
FROM Employees e
INNER JOIN Employees ee ON e.EmployeeID = ee.ReportsTo
INNER JOIN Orders o ON e.EmployeeID = o.EmployeeID
INNER JOIN [Order Details] od ON o.OrderID = od.OrderID
GROUP BY ee.EmployeeID

-- 列出每家貨運公司運送最多的那一種產品類別與總數量
WITH ti
AS
(
	SELECT
		s.CompanyName, 
		MAX(c.CategoryName) OVER(
			PARTITION BY s.CompanyName
		)AS MaxCategoryID
	FROM Shippers s
	INNER JOIN Orders o ON s.ShipperID = o.ShipVia
	INNER JOIN [Order Details] od ON o.OrderID = od.OrderID
	INNER JOIN Products p ON od.ProductID = p.ProductID
	INNER JOIN Categories c ON p.CategoryID = c.CategoryID
)
SELECT
	CompanyName, MaxCategoryID, COUNT(MaxCategoryID) AS TotalMaxCategoryID
FROM ti
GROUP BY CompanyName, MaxCategoryID



-- 列出每一個客戶買最多的產品類別與金額
WITH tj
AS
(
	SELECT 
		MAX(cc.CategoryName) AS MaxCategoryName
	FROM Customers c
	INNER JOIN Orders o ON c.CustomerID = o.CustomerID
	INNER JOIN [Order Details] od ON o.OrderID = od.OrderID
	INNER JOIN Products p ON od.ProductID = p.ProductID
	INNER JOIN Categories cc ON p.CategoryID = cc.CategoryID
	GROUP BY c.CustomerID
)
SELECT 
	c.CustomerID, MAX(cc.CategoryName) AS MaxCategoryName,
	SUM(od.UnitPrice*od.Quantity*(1 - od.Discount)) AS SumMaxCategoryName
FROM Customers c
INNER JOIN Orders o ON c.CustomerID = o.CustomerID
INNER JOIN [Order Details] od ON o.OrderID = od.OrderID
INNER JOIN Products p ON od.ProductID = p.ProductID
INNER JOIN Categories cc ON p.CategoryID = cc.CategoryID
WHERE cc.CategoryName IN (
	SELECT
		MaxCategoryName
	FROM tj
)
GROUP BY c.CustomerID

-- 列出每一個客戶買最多的那一個產品與購買數量

-- 按照城市分類，找出每一個城市最近一筆訂單的送貨時間

-- 列出購買金額第五名與第十名的客戶，以及兩個客戶的金額差距

